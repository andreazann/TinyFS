--
-- Created by IntelliJ IDEA.
-- User: Marco
-- Date: 03/07/2017
-- Time: 10:46
-- To change this template use File | Settings | File Templates.
--
-- see if the file exists
function file_exists(file)
    local f = io.open(file, "rb")
    if f then f:close() end
    return f ~= nil
end

-- get all lines from a file, returns an empty
-- list/table if the file does not exist
function lines_from(file)
    if not file_exists(file) then return {} end
    local lines = {}
    for line in io.lines(file) do
        lines[#lines + 1] = line
    end
    return lines
end

function compact_files()
    os.execute(
        ".~/.opam/system/bin/frama-c -quiet $(find ./src -name \"*.c\") $(find ./src -name \"*.h\") $(find ./lib -name \"*.c\") $(find ./lib -name \"*.h\") -print > ./bin/tinyfs_raw.c"
    )
end

function remove_frama_logs()
    os.execute(
        "awk '/\\/\\* Generated by Frama-C \\*\\//{i++}i' ./bin/tinyfs_raw.c > ./bin/tinyfs.c"
    )
end

function remove_frama_printf()
    os.execute(
        "awk '/int printf_va_[0-9]+\\(char const \\*format.*\\);/{i++}i' ./bin/tinyfs.c > ./bin/tinyfs_raw.c"
    )

    os.execute("awk '{gsub(\"printf_va_[0-9]+\", \"printf\")}1' ./bin/tinyfs_raw.c > ./bin/tinyfs.c")
end

function remove_temp_file()
    os.execute("rm ./bin/tinyfs_raw.c")
end

function compile_source()
    os.execute("gcc -o ./bin/tinyfs ./bin/tinyfs.c")
end

local testname = arg[1]
local forcecompile = arg[2] == '--compile'

print("testname: " .. testname .. " forcecompile: " .. tostring(forcecompile))

local file = './tests/' .. testname .. '.in'
local lines = lines_from(file)
local arguments = ''

-- print all line numbers and their contents
for k, v in pairs(lines) do
    arguments = string.format("%s \"%s\"", arguments, v)
end

print("arguments: " .. arguments)

--[[
if (not file_exists("./bin/tinyfs.c")) then
    compact_files()

    remove_frama_logs()

    remove_frama_printf()

    remove_temp_file()

    compile_source()
elseif forcecompile then
    compile_source()
end

os.execute("./bin/tinyfs" .. arguments)
--]]